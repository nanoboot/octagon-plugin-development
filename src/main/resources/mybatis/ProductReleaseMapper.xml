<?xml version="1.0" encoding="UTF-8"?>
<!--
 Octagon Plugin Development: Development plugin for Octagon application.
 Copyright (C) 2021-2022 the original author or authors.

 This program is free software; you can redistribute it and/or
 modify it under the terms of the GNU General Public License
 as published by the Free Software Foundation; version 2
 of the License only.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.nanoboot.octagon.plugin.development.persistence.impl.mappers.ProductReleaseMapper">

    <resultMap id="productReleaseResultMap" type="org.nanoboot.octagon.plugin.development.classes.ProductRelease">
        <id property="id" column="ID" typeHandler="org.nanoboot.octagon.entity.typehandlers.UUIDTypeHandler"/>
        <result property="productId" column="PRODUCT_ID" typeHandler="org.nanoboot.octagon.entity.typehandlers.UUIDTypeHandler"/>
        <result property="productVersionId" column="PRODUCT_VERSION_ID" typeHandler="org.nanoboot.octagon.entity.typehandlers.UUIDTypeHandler"/>
        <result property="releaseDate" column="RELEASE_DATE" typeHandler="org.nanoboot.octagon.entity.typehandlers.LocalDateTypeHandler" />

        <result property="gitStandardization" column="GIT_STANDARDIZATION"/>
        <result property="sonarQube" column="SONAR_QUBE"/>
        <result property="testCoverage" column="TEST_COVERAGE"/>
        <result property="checkStyle" column="CHECK_STYLE"/>
    </resultMap>
    <sql id="productReleaseColumns">
        "ID", "PRODUCT_ID", "PRODUCT_VERSION_ID", "RELEASE_DATE",
        "GIT_STANDARDIZATION", "SONAR_QUBE", "TEST_COVERAGE", "CHECK_STYLE"
    </sql>

    <insert id="create" parameterType="org.nanoboot.octagon.plugin.development.classes.ProductRelease">
        INSERT INTO "PRODUCT_RELEASE" (<include refid="productReleaseColumns"/>)
        VALUES
        (
        #{id},
        #{productId},
        #{productVersionId},
        #{releaseDate},

        #{gitStandardization},
        #{sonarQube},
        #{testCoverage},
        #{checkStyle}

        )
    </insert>

    <select id="read" parameterType="String" resultMap="productReleaseResultMap">
        SELECT
        <include refid="productReleaseColumns"/>
        FROM "PRODUCT_RELEASE"
        WHERE "ID" = #{id}
    </select>

    <update id="update" parameterType="org.nanoboot.octagon.plugin.development.classes.ProductRelease">
        UPDATE "PRODUCT_RELEASE" SET
        "PRODUCT_ID" = #{productId},
        "PRODUCT_VERSION_ID" = #{productVersionId},
        "RELEASE_DATE" = #{releaseDate},

        "GIT_STANDARDIZATION" = #{gitStandardization},
        "SONAR_QUBE" = #{sonarQube},
        "TEST_COVERAGE" = #{testCoverage},
        "CHECK_STYLE" = #{checkStyle}

        WHERE "ID" = #{id}
    </update>

    <delete id="delete" parameterType="String">
            DELETE FROM "PRODUCT_RELEASE"
            WHERE "ID" = #{id}
    </delete>

    <select id="list" parameterType="String" resultMap="productReleaseResultMap">
        SELECT
        <include refid="productReleaseColumns"/>
        FROM "PRODUCT_RELEASE"
        WHERE ${value}
    </select>


    <!-- Labels -->
    <resultMap id="labelResultMap" type="org.nanoboot.octagon.entity.classes.EntityLabel">
        <id property="id" column="ID"/>
        <result property="label" column="NAME"/>
    </resultMap>

    <sql id="labelColumns">
        "ID", "NAME"
    </sql>

    <select id="getLabel" parameterType="String" resultType="String">
        SELECT
            "PRODUCT.NAME" || ' ' || "PRODUCT_VERSION.NAME" AS "NAME"
        FROM "PRODUCT_RELEASE","PRODUCT_VERSION","PRODUCT"
        WHERE "PRODUCT.ID" = "PRODUCT_RELEASE.PRODUCT_ID" AND "PRODUCT_VERSION.ID" = "PRODUCT_VERSION_ID"
    </select>
    <select id="getLabels" resultMap="labelResultMap">
        SELECT
        <include refid="labelColumns"/>
        FROM "QUERY"
    </select>

    <select id="getLabelForProductRelease" parameterType="String" resultType="String">
        SELECT
            "PRODUCT_RELEASE.ID" AS "ID", "PRODUCT.NAME" || ' ' || "PRODUCT_VERSION.NAME" AS "NAME"
        FROM "PRODUCT_RELEASE","PRODUCT_VERSION","PRODUCT"
        WHERE "PRODUCT.ID" = "PRODUCT_RELEASE.PRODUCT_ID" AND "PRODUCT_VERSION.ID" = "PRODUCT_VERSION_ID"
    </select>

</mapper>
